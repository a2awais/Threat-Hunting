let lookback = 24h;
let smartHostPattern = "mail.protection.outlook.com";
let Failed = dynamic(["fail", "softfail"]);
// 1. EmailEvents - Spoofed Internal Mail
let emailSpoof = EmailEvents
| where Timestamp > ago(lookback)
| where InternetMessageId has smartHostPattern
| where SenderFromDomain endswith "Yourcompany.com"
// Failed composite authentication OR explicit SPF/DKIM/DMARC fails
| extend ParsedFields = parse_json(AuthenticationDetails)
| extend 
    SPF = tostring(ParsedFields.SPF),
    DKIM = tostring(ParsedFields.DKIM),
    DMARC = tostring(ParsedFields.DMARC),
    CompAuth = tostring(ParsedFields.CompAuth)
| where SPF has_any (Failed) or DKIM has_any (Failed) or DMARC has_any (Failed) or CompAuth has_any (Failed)
| project Timestamp, Type="EmailSpoof", DeviceName="", 
          SenderFromAddress, RecipientEmailAddress, InternetMessageId,
          SenderIPv4, CompAuth, AuthenticationDetails, Subject, DeliveryAction, ReportId;
// 2. DeviceEvents - DNS Queries to Smart Host
let dnsLookups = DeviceEvents
| where Timestamp > ago(lookback)
| where ActionType == "DnsQueryResponse"
| extend ParsedFieldss = parse_json(AdditionalFields)
| extend DnsQuery = tostring(ParsedFieldss.DnsQueryString)
| where DnsQuery has smartHostPattern
| project Timestamp, Type="DnsLookup", DeviceName, 
          InitiatingProcessFileName, InitiatingProcessCommandLine, DnsQuery, ReportId;
// 3. DeviceNetworkEvents - Outbound Connections to Smart Host
let netConns = DeviceNetworkEvents
| where Timestamp > ago(lookback)
| where RemoteUrl has smartHostPattern
| project Timestamp, Type="NetworkConnection", DeviceName, 
          InitiatingProcessFileName, InitiatingProcessCommandLine,
          RemoteUrl, RemoteIP, ReportId;
// 4. DeviceProcessEvents - Suspicious PowerShell (Send-MailMessage) Opttional - Catch insider abuse
let psAbuse = DeviceProcessEvents
| where Timestamp > ago(lookback)
| where FileName in~ ("powershell.exe","pwsh.exe")
| where ProcessCommandLine has_any ("Send-MailMessage","-SmtpServer", smartHostPattern)
| project Timestamp, Type="PowerShellAbuse", DeviceName, FileName, 
          ProcessCommandLine, InitiatingProcessParentFileName, ReportId;
// === UNION ALL SOURCES ===
union emailSpoof, dnsLookups, netConns, psAbuse
| order by Timestamp desc